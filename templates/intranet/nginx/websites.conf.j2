server {
    listen 2137;
    location / {
        stub_status on;
        access_log   off;
        allow 127.0.0.1;
        deny all;
    }
}


server {
    listen 80 default_server;
    location / {
        return 301 https://skowronski.cloud;
    }
}

server {
    server_name skowronski.cloud;
    include /etc/nginx/ssl.conf;

    location / {
        root /srv/skowronski.cloud;
    }
}

server {
    listen 80;
    server_name fridge.skowronski.cloud;
    location / {
        return 301 https://fridge.skowronski.cloud;
    }
}

server {
    server_name fridge.skowronski.cloud;
    include /etc/nginx/ssl.conf;

    include authelia_endpoint.conf;

    location / {
        root /srv/fridge;
        include auth.conf;
    }
}

server {
    listen 80;
    server_name influx.skowronski.cloud;
    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    server_name influx.skowronski.cloud;
    listen              443 ssl;
    ssl_certificate     /etc/nginx/influx.crt;
    ssl_certificate_key /etc/nginx/influx.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    location / {
       set $upstream_target {{proxied_apps.influx.proto}}://{{proxied_apps.influx.ip}}:{{proxied_apps.influx.port}};
       proxy_pass $upstream_target;
       include proxy.conf;
    }
}


server {
    listen 80;
    server_name semaphore.skowronski.cloud;

    location / {
        #include default_headers;
        return 301 https://$server_name$request_uri;
    }
}

server {
    server_name semaphore.skowronski.cloud;
    include /etc/nginx/ssl.conf;

    include authelia_endpoint.conf;

    location / {
            set $upstream_target http://{{proxied_apps.semaphore.ip}}:{{proxied_apps.semaphore.port}};
            proxy_pass $upstream_target;
            include auth.conf;
            include proxy.conf;
    }
}

server {
    listen 80;
    server_name auth.skowronski.cloud;

    location / {
        #include default_headers;
        return 301 https://$server_name$request_uri;
    }
}

server {
    server_name auth.skowronski.cloud;
    include /etc/nginx/ssl.conf;


    location / {
        root /srv/authelia/public_html/;
    }
    location /api {
        add_header X-Forwarded-Host auth.skowronski.cloud;
        add_header X-Forwarded-Proto $scheme;
        set $upstream_authelia http://127.0.0.1:9091;
        proxy_pass $upstream_authelia;
        include proxy.conf;
    }
}

server {
        server_name ppp.skowronski.cloud;
        listen 80;
        return 301 https://$server_name$request_uri;
}

server {
        server_name ppp.skowronski.cloud;
        include ssl.conf;
        include authelia_endpoint.conf;

        location / {
                set $upstream_target http://{{proxied_apps.ppp.ip}}:{{proxied_apps.ppp.port}};
                proxy_pass $upstream_target;
                include auth.conf;
                include proxy.conf;
        }
}

server {
        server_name prometheus.skowronski.cloud;
        listen 80;
        return 301 https://$server_name$request_uri;
}

server {
        server_name prometheus.skowronski.cloud;
        include ssl.conf;
        include authelia_endpoint.conf;

        location / {
                set $upstream_target http://{{proxied_apps.prometheus.ip}}:{{proxied_apps.prometheus.port}};
                proxy_pass $upstream_target;
                include auth.conf;
                include proxy.conf;
        }
}

server {
        server_name inventory.skowronski.cloud;
        listen 80;
        return 301 https://$server_name$request_uri;
}

server {
        server_name inventory.skowronski.cloud;
        include ssl.conf;
        include authelia_endpoint.conf;

        location / {
                set $upstream_target http://{{proxied_apps.smi.ip}}:{{proxied_apps.smi.port}};
                proxy_pass $upstream_target;
                include auth.conf;
                include proxy.conf;
        }
}

server {
        server_name grafana.skowronski.cloud;
        listen 80;
        return 301 https://$server_name$request_uri;
}

server {
        server_name grafana.skowronski.cloud;
        include ssl.conf;
        include authelia_endpoint.conf;

        location / {
                resolver 10.201.4.1 10.201.4.2;
                set $upstream_target http://{{proxied_apps.grafana.ip}}:{{proxied_apps.grafana.port}};
                proxy_pass $upstream_target;
                include auth.conf;
                include proxy.conf;
        }
}


########################################################################################################33

server {
        server_name madga.pl www.madga.pl;
        listen 80;
        return 301 https://$server_name$request_uri;
}

server {
        server_name madga.pl www.madga.pl;
        listen              443 ssl;
        ssl_certificate     /etc/nginx/madga.crt;
        ssl_certificate_key /etc/nginx/madga.key;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        location / {
                set $upstream_target https://{{proxied_apps.madga.ip}}:{{proxied_apps.madga.port}};
                proxy_pass $upstream_target;
                include proxy.conf;
        }
}