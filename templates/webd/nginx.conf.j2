user  www-data;
worker_processes  16;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include /etc/nginx/mime.types;
  include /etc/nginx/access_log.conf;
  include /etc/nginx/default_https_opts.conf;

  ########################################################## redirect servers
  server {
    server_name 
      blog.dsinf.net foto.dsinf.net skowron.ski;

    listen              80;

    return 301 https://$host$request_uri;
  }
  server { 
    server_name 
      dsinf.net www.dsinf.net
      danielskowronski.eu *.danielskowronski.eu
      www.skowron.ski;

    listen              443 ssl;
    ssl_certificate     /etc/nginx/daniel.crt;
    ssl_certificate_key /etc/nginx/daniel.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    return 301 https://skowron.ski/;
  }
  ########################################################## proxy servers

  ########################################################## www.skowron.ski server
  server {
    server_name skowron.ski;

    listen              443 ssl;
    ssl_certificate     /etc/nginx/daniel.crt;
    ssl_certificate_key /etc/nginx/daniel.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    index index.html;
    root /srv/skowron.ski;

    location / {
      if ($http_origin ~* "^https?://(skowron.ski|blog.dsinf.net|foto.dsinf.net|skowronski.cloud)$") {
        add_header Access-Control-Allow-Origin "$http_origin";
      }
    }

    location ^~ /error/ {
      internal;
      root /srv/errors;
    }
    {% for error_page in http_codes %}
    error_page {{ error_page.error_code }} /error/{{ error_page.error_code }}.html;
    {% endfor %}
  }

  ########################################################## blog.dsinf.net server
  server {
    server_name blog.dsinf.net;

    listen              443 ssl;
    ssl_certificate     /etc/nginx/daniel.crt;
    ssl_certificate_key /etc/nginx/daniel.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    add_header X-Powered-By "DS";
    add_header X-Frame-Options "DENY";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Download-Options "noopen";
    add_header X-Permitted-Cross-Domain-Policies "none";
    add_header X-DNS-Prefetch-Control "on";
    add_header Connection "keep-alive";
    add_header Strict-Transport-Security "max-age=86400; includeSubDomains; preload";
    #add_header Content-Security-Policy "script-src 'self' 'unsafe-inline' 'unsafe-eval'; object-src 'none'; base-uri 'none'; block-all-mixed-content; upgrade-insecure-requests";
    add_header Referrer-Policy "no-referrer-when-downgrade";
    #add_header Cross-Origin-Resource-Policy "same-origin";
    #add_header Cross-Origin-Embedder-Policy "unsafe-none";
    #add_header Cross-Origin-Opener-Policy "unsafe-none";

    index index.php;
    client_max_body_size 32M;

    root /srv/blog;

    location / {
      try_files $uri $uri/ /index.php$is_args$args;
    }

    if ($uri ~* /wp\-content/cache/comet\-cache/cache(?:/|$)) {
      return 403;
    }
    if ($uri ~* /wp\-content/cache/comet\-cache/htmlc/private(?:/|$)) {
      return 403;
    }
    location ~* \.(?:ttf|ttc|otf|eot|woff|woff2|css|js)$ {
      add_header Access-Control-Allow-Origin *;
    }

    add_header X-Content-Type-Options "nosniff" always;


    location ~ \.php$ {
      try_files      $uri               /index.php =404;
      fastcgi_split_path_info           ^(.+\.php)(/.+)$;
      fastcgi_pass   unix:/run/php/php{{php_ver}}-fpm_blog.sock;
      fastcgi_index  index.php;
      fastcgi_param  SCRIPT_FILENAME    /srv/blog/$fastcgi_script_name;
      include        /etc/nginx/fastcgi_params;

      add_header Last-Modified $date_gmt;
      add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
      if_modified_since off;
      expires off;
      etag off;
    }

    location ^~ /error/ {
      internal;
      root /srv/errors;
    }
    {% for error_page in http_codes %}
    error_page {{ error_page.error_code }} /error/{{ error_page.error_code }}.html;
    {% endfor %}
    fastcgi_intercept_errors on;
  }

  ########################################################## foto.dsinf.net server


  server {
    server_name foto.dsinf.net;

    listen              443 ssl;
    ssl_certificate     /etc/nginx/daniel.crt;
    ssl_certificate_key /etc/nginx/daniel.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    add_header X-Powered-By "DS";
    add_header X-Frame-Options "DENY";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Download-Options "noopen";
    add_header X-Permitted-Cross-Domain-Policies "none";
    add_header X-DNS-Prefetch-Control "on";
    add_header Connection "keep-alive";
    add_header Strict-Transport-Security "max-age=86400; includeSubDomains; preload";
    #add_header Content-Security-Policy "script-src 'self' 'unsafe-inline' 'unsafe-eval'; object-src 'none'; base-uri 'none'; block-all-mixed-content; upgrade-insecure-requests";
    add_header Referrer-Policy "no-referrer-when-downgrade";
    #add_header Cross-Origin-Resource-Policy "same-origin";
    #add_header Cross-Origin-Embedder-Policy "unsafe-none";
    #add_header Cross-Origin-Opener-Policy "unsafe-none";

    index index.php;
    client_max_body_size 32M;

    root /srv/foto2;

    location / {
      try_files $uri $uri/ /index.php$is_args$args;
    }

    if ($uri ~* /wp\-content/cache/comet\-cache/cache(?:/|$)) {
      return 403;
    }
    if ($uri ~* /wp\-content/cache/comet\-cache/htmlc/private(?:/|$)) {
      return 403;
    }
    location ~* \.(?:ttf|ttc|otf|eot|woff|woff2|css|js)$ {
      add_header Access-Control-Allow-Origin *;
    }

    add_header X-Content-Type-Options "nosniff" always;


    location ~ \.php$ {
      try_files      $uri               /index.php =404;
      fastcgi_split_path_info           ^(.+\.php)(/.+)$;
      fastcgi_pass   unix:/run/php/php{{php_ver}}-fpm_foto.sock;
      fastcgi_index  index.php;
      fastcgi_param  SCRIPT_FILENAME    /srv/foto2/$fastcgi_script_name;
      include        /etc/nginx/fastcgi_params;

      add_header Last-Modified $date_gmt;
      add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
      if_modified_since off;
      expires off;
      etag off;
    }

    location ^~ /error/ {
      internal;
      root /srv/errors/;
    }
    {% for error_page in http_codes %}
    error_page {{ error_page.error_code }} /error/{{ error_page.error_code }}.html;
    {% endfor %}
    fastcgi_intercept_errors on;
  }

}
